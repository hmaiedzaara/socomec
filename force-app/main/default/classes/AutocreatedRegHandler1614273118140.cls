//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class AutocreatedRegHandler1614273118140 implements Auth.RegistrationHandler{
global boolean canCreateUser(Auth.UserData data) {
    //TODO: Check whether we want to allow creation of a user with this data
    //Set<String> s = new Set<String>{'usernamea', 'usernameb', 'usernamec'};
    //if(s.contains(data.username)) {
        //return true;
    //}
    return false;
}

global User createUser(Id portalId, Auth.UserData data){
    System.debug('PortalId :' + portalId);
    System.debug('data :' + data);
    User u; // is null
    Boolean isFound = false;
    for(User record: [SELECT ID, State FROM User Where SMC_Socomec_connect__c = :data.username LIMIT 1]) {
      u = record;
      isFound = true;
    }
    if(isFound == false) {
        throw new Auth.DiscoveryCustomErrorException('Test Error');
    }
    return u ; // will return null or a single record
}

global void updateUser(Id userId, Id portalId, Auth.UserData data){
    /* DOS : global comment
    User u = new User(id=userId);
    //TODO: Customize the username. Must be 80 characters or less.
    //u.username = data.username + '@myorg.com';
    u.email = data.email;
    u.lastName = data.lastName;
    u.firstName = data.firstName;
    //String alias = data.username;
    //Alias must be 8 characters or less
    //if(alias.length() > 8) {
        //alias = alias.substring(0, 8);
    //}
    //u.alias = alias;
    update(u);
    */
}
}